{
  "permissions": {
    "allow": [
      "Bash(flutter gen-l10n:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(sed:*)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n \"l10n\\.\" /mnt/c/moroka/lib/presentation/screens/about/about_screen.dart)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n \"l10n\\.\" /mnt/c/moroka/lib/presentation/screens/main/main_screen.dart)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"AppLocalizations\" /mnt/c/moroka/lib/presentation/screens/main/main_screen.dart)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"app_localizations\" lib/presentation/screens/main/main_screen.dart)",
      "Bash(ls:*)",
      "Bash(flutter analyze:*)",
      "Bash(dart analyze:*)",
      "Bash(python3:*)",
      "Bash(for:*)",
      "Bash(do echo \"Checking $file\")",
      "Bash(done)",
      "Bash(diff:*)",
      "Bash(dart run:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/flutter-bin/flutter gen-l10n)",
      "Bash(/mnt/c/flutter/bin/flutter gen-l10n)",
      "Bash(export:*)",
      "Bash(flutter:*)",
      "Bash(do echo -n \"$file: \")",
      "Bash(do echo \"=== $file ===\")",
      "Bash(do echo \"=== app_$lang.arb ===\")",
      "Bash(if ! grep -q '\"\"cardsSelected\"\":' \"app_$lang.arb\")",
      "Bash(then echo \"MISSING cardsSelected\")",
      "Bash(fi)",
      "Bash(if ! grep -q '\"\"cardsRemaining\"\":' \"app_$lang.arb\")",
      "Bash(then echo \"MISSING cardsRemaining\")",
      "Bash(do echo \"Validating $file...\")",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg --line-number \"[가-힣]+\" lib/presentation/screens/spread_selection/spread_selection_screen.dart)",
      "Bash(/mnt/c/flutter/bin/flutter analyze lib/presentation/screens/spread_selection/spread_selection_screen.dart)",
      "Bash(fvm flutter gen-l10n:*)",
      "Bash(/usr/bin/flutter gen-l10n)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"운명의 문을 열다|Enter.*[Dd]estiny|Open.*[Ff]ate\" lib/l10n/ -A 2 -B 2)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"\\\"skip\\\"|\\\"next\\\"|\\\"SKIP\\\"|\\\"NEXT\\\"\" lib/l10n/app_en.arb -i -A 2 -B 2)",
      "Bash(/usr/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"skip|next\" lib/l10n/app_en.arb -i -A 2 -B 2)",
      "Bash(/mnt/c/flutter/bin/flutter analyze)",
      "Bash(dart generate_l10n.dart:*)",
      "Bash(awk:*)",
      "Bash(do if grep -q \"drawAddedMessage\" \"$file\")",
      "Bash(then echo \"$file: has drawAddedMessage\")",
      "Bash(else echo \"$file: MISSING drawAddedMessage\")",
      "Bash(npm i:*)",
      "Bash(sudo npm i -g @anthropic-ai/claude-code)",
      "Bash(test:*)",
      "Bash(/usr/bin/flutter analyze 2 >& 1)",
      "Bash(dart pub:*)",
      "Bash(/mnt/c/flutter/bin/dart run flutter_gen:flutter_gen_runner)",
      "Bash(/mnt/c/flutter/bin/dart run lib/l10n/regenerate_l10n.dart)",
      "Bash(chmod:*)",
      "Bash(/tmp/add_localization_strings.sh:*)",
      "Bash(# Extract all l10n keys from fallback_messages.dart\ngrep -o 'l10n\\.[a-zA-Z_]*' /mnt/c/moroka/lib/core/constants/fallback_messages.dart | sed 's/l10n\\.//' | sort | uniq > /tmp/fallback_keys.txt\n\n# Extract all keys from app_en.arb (excluding @ metadata keys)\ngrep -o '\"[^@][^\"]*\":' /mnt/c/moroka/lib/l10n/app_en.arb | sed 's/\"//g' | sed 's/://g' | sort | uniq > /tmp/en_keys.txt\n\n# Find missing keys\necho \"=== Missing keys in app_en.arb ===\"\ncomm -23 /tmp/fallback_keys.txt /tmp/en_keys.txt)",
      "Bash(# Extract all keys from app_ko.arb (excluding @ metadata keys)\ngrep -o '\"[^@][^\"]*\":' /mnt/c/moroka/lib/l10n/app_ko.arb | sed 's/\"//g' | sed 's/://g' | sort | uniq > /tmp/ko_keys.txt\n\n# Find missing keys\necho \"=== Missing keys in app_ko.arb ===\"\ncomm -23 /tmp/fallback_keys.txt /tmp/ko_keys.txt)",
      "Bash(# Count total keys required\ntotal_keys=$(wc -l < /tmp/fallback_keys.txt)\n\n# Count missing keys in each file\nmissing_en=$(comm -23 /tmp/fallback_keys.txt /tmp/en_keys.txt | wc -l)\nmissing_ko=$(comm -23 /tmp/fallback_keys.txt /tmp/ko_keys.txt | wc -l)\n\n# Calculate present keys\npresent_en=$((total_keys - missing_en))\npresent_ko=$((total_keys - missing_ko))\n\necho \"=== Summary ===\"\necho \"Total keys required from fallback_messages.dart: $total_keys\"\necho \"\"\necho \"app_en.arb:\"\necho \"  Present: $present_en\"\necho \"  Missing: $missing_en\"\necho \"\"\necho \"app_ko.arb:\"\necho \"  Present: $present_ko\" \necho \"  Missing: $missing_ko\")"
    ],
    "deny": []
  }
}